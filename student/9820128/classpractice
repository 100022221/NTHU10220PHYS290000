def backward(x):
    s=len(x)-1
    while s>=0:
        t=x[s]
        print t
        s=s-1

def find(x,s,t):
    n=t
    while n<len(x):
        letter=x[n]
        if letter==s:
            return n
        n=n+1
        
def find_all(x,s,t):
    n=t
    while n<len(x):
        letter=x[n]
        if letter==s:
            print n
        n=n+1
        
def count(x,y):
    n=0
    l = len( y )
    while n < len( x ):
        if x[ n:( n + l ) ] == y:
            return n
        n += 1
    return -1

def count_from(x,y,z):
    count=0
    for t in x[z:]:
        if t==y:
            count=count+1
    print count

def is_palindrome(x):
    if x==x[::-1]:
        return True
    else:
        return False

def nested_sum(x):
    n=0
    while n<len(x):
        s=sum(x[n])
        n=n+1
        s+=0






























    
