Point Class and Rectangle Class
import copy
import datetime

class Point(object):
    def __init__(self,x=0,y=0):
        self.x = x
        self.y = y
    def __str__(self):
        return '(%g, %g)' % (self.x, self.y)

p1 = Point()
p1.x = 3.0
p1.y = 4.0

p2 = Point()
p2.x=0.0
p2.y = 0.0

p3 = Point(100,2)
print p3

def print_point(p):
    print '(%g, %g)' % (p.x, p.y)

def distance_of_points(p1,p2):
    dx = p1.x - p2.x
    dy = p1.y - p2.y
    distance = (dx**2 +dy**2)**0.5
    return distance

class Rectangle(object):
    pass

box = Rectangle()
box.width = 100.0
box.height = 200.0
box.corner = Point()
box.corner.x = 0.0
box.corner.y = 0.0

def find_center(rect):
    p = Point()
    p.x = rect.corner.x + rect.width/2.0
    p.y = rect.corner.y + rect.height/2.0
    return p

#center = find_center(box)
#print_point(center)

def grow_rectangle(rec,dwidth,dheight):
    rec.width += dwidth
    rec.height += dheight

#grow_rectangle(box,100.0,200.0)
#print box.width

def move_rectangle(rec,dx,dy):
    rec.corner.x +=dx
    rec.corner.y +=dy

#move_rectangle(box,-100.0,-200.0)
#print box.corner.x

def move_rectangle2(rec,dx,dy):
    newrec = copy.deepcopy(rec)
    newrec.corner.x +=dx
    newrec.corner.y +=dy
    return newrec
